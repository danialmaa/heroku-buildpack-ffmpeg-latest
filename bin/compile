#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

header() {
  echo "" || true
  echo "-----> $*" || true
}

output() {
  while IFS= read -r LINE; do
    # do not indent headers that are being piped through the output
    if [[ "$LINE" =~ ^-----\>.* ]]; then
      echo "$LINE" || true
    else
      echo "       $LINE" || true
    fi
  done
}

header "Installing ffmpeg"

BUILD_DIR=${1:-}
VENDOR_DIR="vendor"
FFMPEG_ARCHIVE_NAME="ffmpeg.tar.gz"

cd $BUILD_DIR
mkdir -p $VENDOR_DIR
cd $VENDOR_DIR
mkdir -p ffmpeg
cd ffmpeg

if [[ -z $FFMPEG_DOWNLOAD_URL ]]; then
  echo "Variable FFMPEG_DOWNLOAD_URL isn't set, using default value" | output
  FFMPEG_DOWNLOAD_URL="https://ftp.gnu.org/pub/gnu/ncurses/ncurses-6.1.tar.gz"
fi

echo "Downloading $FFMPEG_DOWNLOAD_URL" | output

code=$(curl "$FFMPEG_DOWNLOAD_URL" -L --silent --fail --retry 5 --retry-max-time 15 -o ./$FFMPEG_ARCHIVE_NAME --write-out "%{http_code}")

if [ "$code" != "200" ]; then
  echo "Unable to download ffmpeg: $code" | output && exit 1
fi

echo "Unpacking the archive" | output

tar zvxf "./$FFMPEG_ARCHIVE_NAME" --strip-components=1

if [ "$?" != "0" ]; then
  echo "Failed to unpack" | output && exit 1
fi

./configure --prefix=$HOME/local
make
make install
export LDFLAGS='-L$HOME/local/lib'
export CPPFLAGS='-I$HOME/local/include'

cd ~
wget "https://ftp.gnu.org/gnu/screen/screen-4.8.0.tar.gz"
tar xzvf screen-4.8.0.tar.gz
mkdir $HOME/local/etc # for install below
cd screen-4.8.0

./configure --prefix=$HOME/local
# if you got tgetent error use real path instead of $HOME
make install &&
install -m 644 $HOME/screen-4.8.0/etc/etcscreenrc $HOME/local/etc/screenrc

export PATH="$HOME/local/bin:$PATH"

rm $FFMPEG_ARCHIVE_NAME

PROFILE_PATH="$BUILD_DIR/.profile.d/ffmpeg.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo 'export PATH="$PATH:${HOME}/vendor/ffmpeg"' >> $PROFILE_PATH

echo "Installation successful" | output
